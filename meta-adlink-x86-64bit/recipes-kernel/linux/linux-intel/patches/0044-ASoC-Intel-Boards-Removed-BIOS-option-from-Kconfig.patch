From c316bfc4046d78dde92eaa194c7c3208b28d03d1 Mon Sep 17 00:00:00 2001
From: Jakub Dorzak <jdorzakx@intel.com>
Date: Mon, 25 Jul 2016 09:57:22 +0100
Subject: [PATCH 044/102] ASoC: Intel: Boards: Removed BIOS option from Kconfig

Removed BIOS related functions from the machine driver and menuconfig respectively.

Signed-off-by: Jakub Dorzak <jdorzakx@intel.com>

Conflicts:
	sound/soc/intel/Kconfig
---
 sound/soc/intel/boards/Kconfig     |   7 --
 sound/soc/intel/boards/bxt_gpmrb.c | 164 -------------------------------------
 2 files changed, 171 deletions(-)

diff --git a/sound/soc/intel/boards/Kconfig b/sound/soc/intel/boards/Kconfig
index 039602b..df68be6 100644
--- a/sound/soc/intel/boards/Kconfig
+++ b/sound/soc/intel/boards/Kconfig
@@ -414,13 +414,6 @@ config SND_SOC_INTEL_BXT_GPMRB_MACH
 	   Say Y if you have such a device
 	   If unsure select "N".
 
-config SND_SOC_BXT_GPMRB_MACH_BIOS
-	bool "Select to enable BXT GPMRB Audio with BIOS"
-	default n
-	help
-	   This is a config define to enable Pin audio ownership workaround for BIOS
-	   version BXTI_IFWI_X64_R_2015_10_13_1544 or BXTI_IFWI_X64_D_2015_10_13_1544
-
 config SND_SOC_INTEL_APLI_LHCRB_DUMMY_MACH
 	tristate "ASoC Audio driver for APLI LHCRB Dummy Codec"
 	depends on X86_INTEL_LPSS && I2C
diff --git a/sound/soc/intel/boards/bxt_gpmrb.c b/sound/soc/intel/boards/bxt_gpmrb.c
index 0f82ac51..3948257 100644
--- a/sound/soc/intel/boards/bxt_gpmrb.c
+++ b/sound/soc/intel/boards/bxt_gpmrb.c
@@ -303,173 +303,9 @@
 	.fully_routed = true,
 };
 
-
-/*
- * WORKAROUND
- * Required to set the proper pin ownership with BIOS
- * version BXTI_IFWI_X64_R_2015_10_13_1544 or BXTI_IFWI_X64_D_2015_10_13_1544
- */
-static void broxton_bios_set_pin_ownership(struct device *dev)
-{
-	char *gpio_addr, *mclk_addr;
-	u32 gpio_value = 0;
-	u32 mclk_value = 0;
-	/*
-	 *  WORKAROUND
-	 *  Set Pin ownership to SSP 0
-	 */
-	gpio_value = 0x40900500;
-
-	gpio_addr = (void *)ioremap_nocache(0xD0C40618, 0x30);
-
-	dev_dbg(dev, "%p has %#x\n", gpio_addr,
-		*(u32 *)gpio_addr);
-
-	memcpy_toio(gpio_addr, &gpio_value, sizeof(gpio_value));
-	gpio_value = 0x44000600;
-	memcpy_toio(gpio_addr + 0x8, &gpio_value, sizeof(gpio_value));
-	memcpy_toio(gpio_addr + 0x10, &gpio_value, sizeof(gpio_value));
-	memcpy_toio(gpio_addr + 0x18, &gpio_value, sizeof(gpio_value));
-
-	dev_dbg(dev, "%p has %#x\n", gpio_addr,
-		*(u32 *)gpio_addr);
-	dev_dbg(dev, "%p has %#x\n", gpio_addr + 0x8,
-		*(u32 *)(gpio_addr + 0x8));
-	dev_dbg(dev, "%p has %#x\n", gpio_addr + 0x10,
-		*(u32 *)(gpio_addr + 0x10));
-	dev_dbg(dev, "%p has %#x\n", gpio_addr + 0x10,
-		*(u32 *)(gpio_addr + 0x18));
-
-	iounmap(gpio_addr);
-
-	/*
-	 *  WORKAROUND
-	 *  Set Pin ownership to SSP 1
-	 */
-	gpio_value = 0x44000400;
-
-	gpio_addr = (void *)ioremap_nocache(0xD0C40668, 0x30);
-
-	dev_dbg(dev, "%p has %#x\n", gpio_addr,
-		*(u32 *)gpio_addr);
-
-	memcpy_toio(gpio_addr, &gpio_value, sizeof(gpio_value));
-	memcpy_toio(gpio_addr + 0x8, &gpio_value, sizeof(gpio_value));
-	memcpy_toio(gpio_addr + 0x10, &gpio_value, sizeof(gpio_value));
-	memcpy_toio(gpio_addr + 0x18, &gpio_value, sizeof(gpio_value));
-
-	dev_dbg(dev, "%p has %#x\n", gpio_addr,
-		*(u32 *)gpio_addr);
-	dev_dbg(dev, "%p has %#x\n", gpio_addr + 0x8,
-		*(u32 *)(gpio_addr + 0x8));
-	dev_dbg(dev, "%p has %#x\n", gpio_addr + 0x10,
-		*(u32 *)(gpio_addr + 0x10));
-	dev_dbg(dev, "%p has %#x\n", gpio_addr + 0x18,
-		*(u32 *)(gpio_addr + 0x18));
-
-	iounmap(gpio_addr);
-
-	/*
-	 *  WORKAROUND
-	 *  Set Pin ownership to SSP 3
-	 */
-	gpio_value = 0x44000800;
-
-	gpio_addr = (void *)ioremap_nocache(0xD0C40638, 0x30);
-
-	dev_dbg(dev, "%p has %#x\n", gpio_addr,
-		*(u32 *)gpio_addr);
-
-	memcpy_toio(gpio_addr, &gpio_value, sizeof(gpio_value));
-	memcpy_toio(gpio_addr + 0x8, &gpio_value, sizeof(gpio_value));
-	memcpy_toio(gpio_addr + 0x10, &gpio_value, sizeof(gpio_value));
-	memcpy_toio(gpio_addr + 0x18, &gpio_value, sizeof(gpio_value));
-
-	dev_dbg(dev, "%p has %#x\n", gpio_addr,
-		*(u32 *)gpio_addr);
-	dev_dbg(dev, "%p has %#x\n", gpio_addr + 0x8,
-		*(u32 *)(gpio_addr + 0x8));
-	dev_dbg(dev, "%p has %#x\n", gpio_addr + 0x10,
-		*(u32 *)(gpio_addr + 0x10));
-	dev_dbg(dev, "%p has %#x\n", gpio_addr + 0x18,
-		*(u32 *)(gpio_addr + 0x18));
-
-	iounmap(gpio_addr);
-
-	/*
-	 *  WORKAROUND
-	 *  Set Pin ownership to SSP 4
-	 */
-	gpio_value = 0x44000A00;
-
-	gpio_addr = (void *)ioremap_nocache(0xD0C705A0, 0x30);
-
-	dev_dbg(dev, "%p has %#x\n", gpio_addr,
-		*(u32 *)gpio_addr);
-
-	memcpy_toio(gpio_addr, &gpio_value, sizeof(gpio_value));
-	memcpy_toio(gpio_addr + 0x8, &gpio_value, sizeof(gpio_value));
-	memcpy_toio(gpio_addr + 0x10, &gpio_value, sizeof(gpio_value));
-	gpio_value = 0x44000800;
-	memcpy_toio(gpio_addr + 0x18, &gpio_value, sizeof(gpio_value));
-
-	dev_dbg(dev, "%p has %#x\n", gpio_addr,
-		*(u32 *)gpio_addr);
-	dev_dbg(dev, "%p has %#x\n", gpio_addr + 0x8,
-		*(u32 *)(gpio_addr + 0x8));
-	dev_dbg(dev, "%p has %#x\n", gpio_addr + 0x10,
-		*(u32 *)(gpio_addr + 0x10));
-	dev_dbg(dev, "%p has %#x\n", gpio_addr + 0x18,
-		*(u32 *)(gpio_addr + 0x18));
-
-	iounmap(gpio_addr);
-
-	/*
-	 *  WORKAROUND
-	 *  Set Pin ownership to SSP 5
-	 */
-	gpio_value = 0x44000800;
-	mclk_value = 0x44000400;
-
-	gpio_addr = (void *)ioremap_nocache(0xd0c70580, 0x30);
-	mclk_addr = (void *)ioremap_nocache(0xd0c40660, 0x30);
-
-	dev_dbg(dev, "%p has %#x\n", gpio_addr,
-		*(u32 *)gpio_addr);
-
-	memcpy_toio(gpio_addr, &gpio_value, sizeof(gpio_value));
-	memcpy_toio(gpio_addr + 0x8, &gpio_value, sizeof(gpio_value));
-	memcpy_toio(gpio_addr + 0x10, &gpio_value, sizeof(gpio_value));
-	memcpy_toio(gpio_addr + 0x18, &gpio_value, sizeof(gpio_value));
-
-	dev_dbg(dev, "%p has %#x\n", gpio_addr,
-		*(u32 *)gpio_addr);
-	dev_dbg(dev, "%p has %#x\n", gpio_addr + 0x8,
-		*(u32 *)(gpio_addr + 0x8));
-	dev_dbg(dev, "%p has %#x\n", gpio_addr + 0x10,
-		*(u32 *)(gpio_addr + 0x10));
-	dev_dbg(dev, "%p has %#x\n", gpio_addr + 0x18,
-		*(u32 *)(gpio_addr + 0x18));
-
-	dev_dbg(dev, "MCLK %p has %#x\n", mclk_addr,
-		*(u32 *)mclk_addr);
-	memcpy_toio(mclk_addr, &mclk_value, sizeof(mclk_value));
-	dev_dbg(dev, "MCLK after %p has %#x\n", mclk_addr,
-		*(u32 *)mclk_addr);
-
-	iounmap(gpio_addr);
-	iounmap(mclk_addr);
-}
-
-
 static int broxton_audio_probe(struct platform_device *pdev)
 {
 	broxton_gpmrb.dev = &pdev->dev;
-
-#ifdef CONFIG_SND_SOC_BXT_GPMRB_MACH_BIOS
-	broxton_bios_set_pin_ownership(broxton_gpmrb.dev);
-#endif
-
 	return snd_soc_register_card(&broxton_gpmrb);
 }
 
-- 
1.9.1

