From d65d3ba6ecdc0135ca30573171fab44cf5c7904e Mon Sep 17 00:00:00 2001
From: Jayasankar <jayasankarx.nara@intel.com>
Date: Wed, 27 Sep 2017 14:01:17 +0800
Subject: [PATCH 17/41] Schedule suspend after finish the processing of
 received packets.

Signed-off-by: Jayasankar <jayasankarx.nara@intel.com>
Signed-off-by: Lai, Poey Seng <poey.seng.lai@intel.com>
Conflicts:
1. Manually resolved conflict in condition (if (q_vector->rx.ring))
in igb_poll() to include pm_runtime_get_sync(&pdev->dev);
Reviewed-by: Vinod Kumar <vinod.kumarx.vinod.kumar@intel.com>
---
 drivers/net/ethernet/intel/igb/igb_main.c | 21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)

diff --git a/drivers/net/ethernet/intel/igb/igb_main.c b/drivers/net/ethernet/intel/igb/igb_main.c
index 6d8d66d..190b302 100644
--- a/drivers/net/ethernet/intel/igb/igb_main.c
+++ b/drivers/net/ethernet/intel/igb/igb_main.c
@@ -7367,6 +7367,15 @@ static int igb_poll(struct napi_struct *napi, int budget)
 						     napi);
 	bool clean_complete = true;
 	int work_done = 0;
+	struct igb_adapter *adapter = q_vector->adapter;
+	struct pci_dev *pdev = adapter->pdev;
+
+	/* if igb_poll invoked while suspend in progress return from here */
+	if (pdev->dev.power.runtime_status == RPM_SUSPENDING ||
+	    pdev->dev.power.runtime_status == RPM_SUSPENDED) {
+		napi_complete(napi);
+		return 0;
+	}
 
 #ifdef CONFIG_IGB_DCA
 	if (q_vector->adapter->flags & IGB_FLAG_DCA_ENABLED)
@@ -7376,6 +7385,7 @@ static int igb_poll(struct napi_struct *napi, int budget)
 		clean_complete = igb_clean_tx_irq(q_vector, budget);
 
 	if (q_vector->rx.ring) {
+		pm_runtime_get_sync(&pdev->dev);
 		int cleaned = igb_clean_rx_irq(q_vector, budget);
 
 		work_done += cleaned;
@@ -7981,6 +7991,8 @@ static int igb_clean_rx_irq(struct igb_q_vector *q_vector, const int budget)
 	struct sk_buff *skb = rx_ring->skb;
 	unsigned int total_bytes = 0, total_packets = 0;
 	u16 cleaned_count = igb_desc_unused(rx_ring);
+	struct igb_adapter *adapter = q_vector->adapter;
+	struct pci_dev *pdev = adapter->pdev;
 
 	while (likely(total_packets < budget)) {
 		union e1000_adv_rx_desc *rx_desc;
@@ -8063,6 +8075,15 @@ static int igb_clean_rx_irq(struct igb_q_vector *q_vector, const int budget)
 	if (cleaned_count)
 		igb_alloc_rx_buffers(rx_ring, cleaned_count);
 
+	/* Schedule suspend if igb_poll() is actually called when
+	 * the hw received some packets.
+	 */
+	if (total_packets) {
+		pm_runtime_mark_last_busy(&pdev->dev);
+		pm_runtime_put_sync_autosuspend(&pdev->dev);
+	} else {
+		pm_runtime_put_noidle(&pdev->dev);
+	}
 	return total_packets;
 }
 
-- 
1.9.1

