From ba4b60450ad31b4d53bac9c016c87fb82916bbee Mon Sep 17 00:00:00 2001
From: Matt Roper <matthew.d.roper@intel.com>
Date: Wed, 16 May 2018 14:46:40 -0700
Subject: [PATCH 30/38] drm/i915: Enable NV12 on E0+ steppings

Broxton E0 SoC steppings (which contain a D0 GT/display stepping) have
incorporated the NV12 display fix, so it should be safe to expose NV12
as a usable plane format.

Signed-off-by: Matt Roper <matthew.d.roper@intel.com>
---
 drivers/gpu/drm/i915/i915_drv.h      |  1 +
 drivers/gpu/drm/i915/intel_display.c | 14 ++++++++------
 2 files changed, 9 insertions(+), 6 deletions(-)

diff --git a/drivers/gpu/drm/i915/i915_drv.h b/drivers/gpu/drm/i915/i915_drv.h
index a55b6a1..08d496a 100644
--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@ -3005,6 +3005,7 @@ static inline struct scatterlist *__sg_next(struct scatterlist *sg)
 #define BXT_REVID_B0		0x3
 #define BXT_REVID_B_LAST	0x8
 #define BXT_REVID_C0		0x9
+#define BXT_REVID_D0		0xC
 
 #define IS_BXT_REVID(dev_priv, since, until) \
 	(IS_BROXTON(dev_priv) && IS_REVID(dev_priv, since, until))
diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index 3af2d25..f37f505 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -513,7 +513,7 @@ static void intel_update_czclk(struct drm_i915_private *dev_priv)
 static void
 skl_wa_528(struct drm_i915_private *dev_priv, int pipe, bool enable)
 {
-	if (IS_SKYLAKE(dev_priv) || IS_BROXTON(dev_priv))
+	if (IS_SKYLAKE(dev_priv) || IS_BXT_REVID(dev_priv, 0, BXT_REVID_D0))
 		return;
 
 	if (enable)
@@ -525,7 +525,7 @@ static void intel_update_czclk(struct drm_i915_private *dev_priv)
 static void
 skl_wa_clkgate(struct drm_i915_private *dev_priv, int pipe, bool enable)
 {
-	if (IS_SKYLAKE(dev_priv) || IS_BROXTON(dev_priv))
+	if (IS_SKYLAKE(dev_priv) || IS_BXT_REVID(dev_priv, 0, BXT_REVID_D0))
 		return;
 
 	if (enable)
@@ -5282,7 +5282,7 @@ static bool needs_nv12_wa(struct drm_i915_private *dev_priv,
 	if (!crtc_state->nv12_planes)
 		return false;
 
-	if (IS_SKYLAKE(dev_priv) || IS_BROXTON(dev_priv))
+	if (IS_SKYLAKE(dev_priv) || IS_BXT_REVID(dev_priv, 0, BXT_REVID_D0))
 		return false;
 
 	if ((INTEL_GEN(dev_priv) == 9 && !IS_GEMINILAKE(dev_priv)) ||
@@ -13597,7 +13597,8 @@ bool skl_plane_has_planar(struct drm_i915_private *dev_priv,
 			  enum pipe pipe, enum plane_id plane_id)
 {
 	if (plane_id == PLANE_PRIMARY) {
-		if (IS_SKYLAKE(dev_priv) || IS_BROXTON(dev_priv))
+		if (IS_SKYLAKE(dev_priv) ||
+		    IS_BXT_REVID(dev_priv, 0, BXT_REVID_D0))
 			return false;
 		else if ((INTEL_GEN(dev_priv) == 9 && pipe == PIPE_C) &&
 			 !IS_GEMINILAKE(dev_priv))
@@ -13610,7 +13611,8 @@ bool skl_plane_has_planar(struct drm_i915_private *dev_priv,
 				return false;
 		} else {
 			if (plane_id != PLANE_SPRITE0 || pipe == PIPE_C ||
-			    IS_SKYLAKE(dev_priv) || IS_BROXTON(dev_priv))
+			    IS_SKYLAKE(dev_priv) ||
+			    IS_BXT_REVID(dev_priv, 0, BXT_REVID_D0))
 				return false;
 		}
 	}
@@ -14730,7 +14732,7 @@ static int intel_framebuffer_init(struct intel_framebuffer *intel_fb,
 			goto err;
 		}
 		if (INTEL_GEN(dev_priv) < 9 || IS_SKYLAKE(dev_priv) ||
-		    IS_BROXTON(dev_priv)) {
+		    IS_BXT_REVID(dev_priv, 0, BXT_REVID_D0)) {
 			DRM_DEBUG_KMS("unsupported pixel format: %s\n",
 				      drm_get_format_name(mode_cmd->pixel_format,
 							  &format_name));
-- 
1.9.1

