From 7518cac9f4868ccf1d8feefdb2abbc3a1fbe13e3 Mon Sep 17 00:00:00 2001
From: "Tunik, Raman" <Raman_Tunik@mentor.com>
Date: Tue, 14 Mar 2017 17:03:24 +0100
Subject: [PATCH 15/37] intel_pstate: Add pstate notifier callback

Whenever the CPU frequency is changed, notify any other kernel processes
that have registered to receive this information.

Signed-off-by: Tunik, Raman <Raman_Tunik@mentor.com>
Signed-off-by: Wan Ahmad Zainie <wan.ahmad.zainie.wan.mohamad@intel.com>
---
 drivers/cpufreq/intel_pstate.c | 32 ++++++++++++++++++++++++++++++++
 1 file changed, 32 insertions(+)

diff --git a/drivers/cpufreq/intel_pstate.c b/drivers/cpufreq/intel_pstate.c
index c1b459d..06e5364 100644
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@ -30,6 +30,7 @@
 #include <linux/acpi.h>
 #include <linux/vmalloc.h>
 #include <trace/events/power.h>
+#include <linux/notifier.h>
 
 #include <asm/div64.h>
 #include <asm/msr.h>
@@ -56,6 +57,8 @@
 #define fp_ext_toint(X) ((X) >> EXT_FRAC_BITS)
 #define int_ext_tofp(X) ((int64_t)(X) << EXT_FRAC_BITS)
 
+static ATOMIC_NOTIFIER_HEAD(pstate_freq_notifier_list);
+
 static inline int32_t mul_fp(int32_t x, int32_t y)
 {
 	return ((int64_t)x * (int64_t)y) >> FRAC_BITS;
@@ -1374,6 +1377,33 @@ static int intel_pstate_get_base_pstate(struct cpudata *cpu)
 			cpu->pstate.max_pstate : cpu->pstate.turbo_pstate;
 }
 
+/**
+ * Register a notifier callback whenever the CPU frequency changes.
+ * @nb: pointer to the notifier block for the callback
+ */
+int pstate_register_freq_notify(struct notifier_block *nb)
+{
+	return atomic_notifier_chain_register(&pstate_freq_notifier_list, nb);
+}
+EXPORT_SYMBOL_GPL(pstate_register_freq_notify);
+
+/**
+ * Unregister a gpu freqency change notifier callback.
+ * @nb: pointer to the notifier block for the callback
+ */
+int pstate_unregister_freq_notify(struct notifier_block *nb)
+{
+	return atomic_notifier_chain_unregister(&pstate_freq_notifier_list, nb);
+}
+EXPORT_SYMBOL_GPL(pstate_unregister_freq_notify);
+
+static int pstate_notifier_call_chain(struct cpudata *cpu)
+{
+	return atomic_notifier_call_chain(&pstate_freq_notifier_list,
+		(unsigned long) cpu->pstate.current_pstate,
+		(void *) (long) (cpu->cpu));
+}
+
 static void intel_pstate_set_pstate(struct cpudata *cpu, int pstate)
 {
 	trace_cpu_frequency(pstate * cpu->pstate.scaling, cpu->cpu);
@@ -1385,6 +1415,8 @@ static void intel_pstate_set_pstate(struct cpudata *cpu, int pstate)
 	 */
 	wrmsrl_on_cpu(cpu->cpu, MSR_IA32_PERF_CTL,
 		      pstate_funcs.get_val(cpu, pstate));
+
+	pstate_notifier_call_chain(cpu);
 }
 
 static void intel_pstate_set_min_pstate(struct cpudata *cpu)
-- 
1.9.1

